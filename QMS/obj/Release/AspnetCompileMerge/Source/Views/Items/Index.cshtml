
@using NMS.Core.Resources
@using NMS.Data
@using GridMvc.Html
@model IEnumerable<NMS.Data.Item>

@{
    ViewBag.Title = CommonRes.Index;
}

<h2>@CommonRes.Index</h2>

<div style="text-align: right;">
    <form action="~/Items/Create">
        <button type="submit" class="btn btn-default alignPreview">
            <span class="glyphicon glyphicon-new-window"></span>
            @CommonRes.Button_CreateNew
        </button>
    </form>
</div>




<br />
@Html.Grid(Model).Named("ordersGrid").Columns(columns =>
{
    columns.Add(model => model.Item_ID).Sortable(true).SetWidth(50).Titled(NMSRes.ID);

    columns.Add(model => model.Item_Grp_ID).Sortable(true).SetWidth(50).Titled(NMSRes.Item_Grp_ID);
    

    columns.Add(model => model.Unit_ID).Sortable(true).SetWidth(50).Titled(NMSRes.Unit_ID);

    columns.Add(model => model.Qunt).Sortable(true).SetWidth(50).Titled(NMSRes.Qunt);

    columns.Add(model => model.OpeningBalance).Sortable(true).SetWidth(50).Titled(NMSRes.OpeningBalance);

    columns.Add(model => model.PriceForOnce).Sortable(true).SetWidth(50).Titled(NMSRes.PriceForOnce);

    columns.Add(model => model.Price_dozen).Sortable(true).SetWidth(50).Titled(NMSRes.Price_dozen);

    columns.Add(model => model.Min_Limit).Sortable(true).SetWidth(50).Titled(NMSRes.Min_Limit);

    columns.Add(model => model.Max_Limit).Sortable(true).SetWidth(50).Titled(NMSRes.Max_Limit);

    columns.Add(model => model.Exp_Date).Sortable(true).SetWidth(50).Titled(NMSRes.Exp_Date);

    columns.Add(model => model.Comp_ID).Sortable(true).SetWidth(50).Titled(NMSRes.Comp_Type_ID);

    columns.Add(model => model.Country_ID).Sortable(true).SetWidth(50).Titled(NMSRes.Country_ID);

    columns.Add(model => model.City_ID).Sortable(true).SetWidth(50).Titled(NMSRes.City_ID);

    columns.Add(model => model.Status).Sortable(true).SetWidth(50).Titled(NMSRes.Status);

    columns.Add(model => model.LastUpdate).Sortable(true).SetWidth(50).Titled(NMSRes.LastUpdate);

    columns.Add(model => model.Entered_By).Sortable(true).SetWidth(50).Titled(NMSRes.Entered_By);

    columns.Add(model => model.Warehouse_ID).Sortable(true).SetWidth(50).Titled(NMSRes.Warehouse_ID);

    //columns.Add(model => model.City.Name).Sortable(true).SetWidth(50).Titled(NMSRes.City.Name);

    //columns.Add(model => model.Company.Comp_Name).Sortable(true).SetWidth(50).Titled(NMSRes.Company.Comp_Name);

    //columns.Add(model => model.Country.Name).Sortable(true).SetWidth(50).Titled(NMSRes.Country.Name);

    //columns.Add(model => model.Items_Group.Item_Grp_Name).Sortable(true).SetWidth(50).Titled(NMSRes.Items_Group.Item_Grp_Name);

    //columns.Add(model => model.Unit.Unit_Name).Sortable(true).SetWidth(50).Titled(NMSRes.Unit.Unit_Name);

    //columns.Add(model => model.WareHouse.Name).Sortable(true).SetWidth(50).Titled(NMSRes.WareHouse.Name);

    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o => Html.ActionLink(CommonRes.Link_Edit, "Edit", new { id = o.Item_ID })).SetWidth(50);
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o => Html.ActionLink(CommonRes.Link_Detail, "Details", new { id = o.Item_ID })).SetWidth(50);
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o => Html.ActionLink(CommonRes.Link_Delete, "Delete", new { id = o.Item_ID })).SetWidth(50);

}).WithPaging(10).Filterable().SetLanguage(CommonRes.Lang)


